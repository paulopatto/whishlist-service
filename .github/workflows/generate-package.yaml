---
name: Release and Publish Docker Image

on:
  release:
    types:
      - publish
      - created

  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to deploy"
        required: true

jobs:
  build-and-push-docker-image-to-ghcr:
    name: "Build package to Github Container Registry"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract release tag and environment
        id: extract_tags
        run: |
          if [[ "${{ github.event.release.draft }}" == "true" ]]; then
            ENV_SUFFIX="-rc"
            LATEST_TAG="rc-latest"
          else
            ENV_SUFFIX=""
            LATEST_TAG="latest"
          fi

          if [[ -n "${{ github.event.inputs.tag }}" ]]; then
            TAG="${{ github.event.inputs.tag }}"
          elif [[ -n "${{ github.event.release.tag_name }}" ]]; then
            TAG="${{ github.event.release.tag_name }}"
          else
            echo "::error title=Tag not found::No tag found"
            exit 1
          fi

          echo "::set-output name=version_tag::${TAG}${ENV_SUFFIX}"
          echo "::set-output name=latest_tag::${LATEST_TAG}"

      - name: Build and push versioned image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.extract_tags.outputs.version_tag }}
          push: true

      - name: Build and push environment-specific latest image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.extract_tags.outputs.latest_tag }}
          push: true

